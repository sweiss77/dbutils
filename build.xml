<!-- $Id$ -->

<!-- 
For instructions on how to build the library, please view the README.txt file.
-->

<project default="jar" basedir=".">

    <!-- =================================================================== -->
    <!-- Initialization target                                               -->
    <!-- =================================================================== -->
    <target name="init">

        <tstamp />
        <property name="Vendor" value="NASA HQ" />
        <property name="vendor" value="nasa_hq" />
        <property name="Name" value="NASA HQ Java SQL Utilities" />
        <property name="name" value="hq_sqlutils" />
        <property name="version.major" value="0" />
        <property name="version.minor" value="9" />
        <property name="version.dot" value="2-beta" />
        <property name="version" value="${version.major}.${version.minor}.${version.dot}" />
        <property name="version.underscore" value="${version.major}_${version.minor}_${version.dot}" />
        <property name="release.dir" value="./releases/${name}-${version}" />
        <property name="year" value="2008" />
        <property name="jarfile" value="${name}-${version.major}_${version.minor}_${version.dot}.jar" />

        <echo message="----------- ${Name} ${version} [${year}] ------------" />

        <!-- <property name="build.compiler" value="classic"/> -->
        <property name="debug" value="on" />
        <property name="optimize" value="on" />
        <property name="deprecation" value="on" />

        <property name="src.dir" value="./src" />
        <!-- <property name="samples.dir" value="./samples"/> -->
        <property name="lib.dir" value="./lib" />
        <property name="packages" value="gov.nasa.hq.*" />

        <property name="build.dir" value="./build" />
        <property name="build.src" value="./build/src" />
        <property name="build.dest" value="./build/classes" />
        <property name="build.javadocs" value="./build/apidocs" />

        <property name="dist.root" value="./dist" />
        <property name="dist.dir" value="${dist.root}/${name}-${version}" />

        <property name="package.dir" value="./package" />

        <filter token="year" value="${year}" />
        <filter token="version" value="${version}" />
        <filter token="date" value="${TODAY}" />
        <filter token="log" value="true" />
        <filter token="verbose" value="true" />

    </target>

    <!-- =================================================================== -->
    <!-- Help on usage                                                       -->
    <!-- =================================================================== -->
    <target name="usage">
        <echo message="" />
        <echo message="" />
        <echo message="Java SQL Utilities Build file" />
        <echo message="-------------------------------------------------------------" />
        <echo message="" />
        <echo message=" available targets are:" />
        <echo message="" />
        <echo message="   package  --> generates the webapp.jar file (default)" />
        <echo message="   compile  --> compiles the source code" />
        <echo message="   javadoc  --> generates the API documentation" />
        <echo message="   clean    --> cleans up the directory" />
        <echo message="" />
        <echo message=" See the comments inside the build.xml file for more details." />
        <echo message="-------------------------------------------------------------" />
        <echo message="" />
        <echo message="" />
    </target>

    <!-- =================================================================== -->
    <!-- Prepares the build directory                                        -->
    <!-- =================================================================== -->
    <target name="prepare" depends="init">
        <mkdir dir="${build.dir}" />
    </target>

    <!-- =================================================================== -->
    <!-- Prepares the source code                                            -->
    <!-- =================================================================== -->
    <target name="prepare-src" depends="prepare">
        <!-- create directories -->
        <mkdir dir="${build.src}" />
        <mkdir dir="${build.dest}" />

        <!-- copy src files -->
        <copy todir="${build.src}" filtering="yes">
            <fileset dir="${src.dir}" />
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the source directory                                       -->
    <!-- =================================================================== -->
    <target name="compile" depends="prepare-src">
        <echo message="Compiling with flags: debug = ${debug}, optimize = ${optimize} deprecation = ${deprecation}" />
        <javac srcdir="src" destdir="${build.dest}" debug="${debug}" verbose="${verbose}" deprecation="${deprecation}" optimize="${optimize}">
            <classpath>
                <pathelement path="${build.dest}" />
                <fileset dir="${lib.dir}">
                    <include name="**/*.jar" />
                </fileset>
            </classpath>
        </javac>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the "About" code                                           -->
    <!-- =================================================================== -->
    <target name="about">
        <javac srcdir="${package.dir}" destdir="${build.dest}" debug="${debug}" verbose="${verbose}" optimize="${optimize}" />
    </target>

    <!-- =================================================================== -->
    <!-- Creates the JAR file                                                -->
    <!-- =================================================================== -->
    <target name="jar" depends="compile">
        <fixcrlf srcdir="." includes="**/*.bat" excludes="build*.*" eol="crlf" />
        <fixcrlf srcdir="." includes="**/*.sh" excludes="build*.*" eol="lf" />
        <jar jarfile="${build.dir}/${jarfile}" basedir="${build.dest}" />
    </target>

    <!--
       This target just sets compiler flags so that the code will
       be optimized when running the release target
    -->
    <target name="optimize">
        <property name="debug" value="off" />
        <property name="optimeze" value="on" />
        <property name="verbose" value="off" />
    </target>

    <!-- Builds a .tar.gz file containing all needed JAR files, JSPs and docs -->
    <target name="release" depends="optimize,clean,compile">
        <echo message="creating release directory: ${release.dir}" />
        <mkdir dir="${release.dir}" />
        <mkdir dir="${release.dir}/docs" />
        <copy todir="${release.dir}/docs">
            <fileset dir="./docs">
                <include name="**/*.txt" />
            </fileset>
        </copy>
        <jar jarfile="${release.dir}/${name}-${version.underscore}.jar" basedir="${build.dir}/classes" />
        <tar tarfile="./releases/${name}-${version.underscore}.tar">
            <tarfileset dir="${release.dir}" />
        </tar>
        <gzip zipfile="./releases/${name}-${version.underscore}.tar.gz" src="./releases/${name}-${version.underscore}.tar" />
        <delete file="./releases/${name}-${version.underscore}.tar" />
        <delete dir="${build.dir}" />
    </target>

    <!-- =================================================================== -->
    <!-- Creates the API documentation                                       -->
    <!-- =================================================================== -->
    <target name="javadoc" depends="prepare-src">
        <mkdir dir="${build.javadocs}" />
        <javadoc packagenames="${packages}" sourcepath="${build.src}" destdir="${build.javadocs}" author="true" version="true" use="true" splitindex="true" noindex="false" windowtitle="${Vendor} ${Name} API" doctitle="${Name}">
            <classpath>
                <pathelement path="${build.dest}" />
                <fileset dir="${lib.dir}">
                    <include name="**/*.jar" />
                </fileset>
                <fileset dir="${tomcat.home}/common/lib">
                    <include name="**/*.jar" />
                </fileset>
            </classpath>
        </javadoc>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the API documentation, with links to JDK 1.4 classes        -->
    <!-- We can use linkoffline with a newer Ant and avoid this target       -->
    <!-- =================================================================== -->
    <target name="javadoc-link" depends="prepare-src">
        <mkdir dir="${build.javadocs}" />
        <javadoc packagenames="${packages}" sourcepath="${build.src}" destdir="${build.javadocs}" author="true" version="true" use="true" splitindex="true" noindex="false" windowtitle="${Name} API" doctitle="${Name}" link="http://java.sun.com/j2se/1.4/docs/api" />
    </target>

    <!-- =================================================================== -->
    <!-- Clean targets                                                       -->
    <!-- =================================================================== -->
    <target name="clean" depends="init">
        <delete dir="${build.dir}" />
    </target>

    <target name="distclean" depends="clean">
        <delete dir="${dist.root}" />
        <delete file="${Name}-${version}.tar.gz" />
        <delete file="${Name}-${version}.tar" />
        <delete file="${Name}-${version}.zip" />
    </target>

</project>

<!-- End of file -->
